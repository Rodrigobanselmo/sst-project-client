{
  // Place your reconecta-video workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  "box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.22);": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact,css",
    "prefix": "bs",
    "body": ["box-shadow: 1px 1px 2px 1px rgba(0, 0, 0, 0.2$1);", "$2"],
    "description": "box-shadow in sc"
  },
  "css: css;": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact,css",
    "prefix": "css",
    "body": [
      "import { css } from '@emotion/react';",
      "${(props) =>",
      "  props.$1 &&",
      "    css`",
      "      $2",
      "  `};"
    ],
    "description": "css in styled components"
  },
  "styledBox: styledBox;": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact,css",
    "prefix": "styledbox",
    "body": ["export const ST$1Box = styled(Box)``;"],
    "description": "styledBox in styled components"
  },
  "mediaQuerie: mediaQuerie;": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact,css",
    "prefix": "mediaQuerie",
    "body": [
      "@media (min-width: ${({ theme }) => theme.breakpoints.values.$1}px) {",
      "",
      "}"
    ],
    "description": "media query"
  },
  "muiSpacing: muiSpacing;": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact,css",
    "prefix": "muiSpacing",
    "body": ["${({ theme }) => theme.spacing($1)}"],
    "description": "mui spacing"
  },
  "muiColor: muiColor;": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact,css",
    "prefix": "muiColor",
    "body": ["${({ theme }) => theme.palette.$1)}"],
    "description": "mui color"
  },
  "background-image: background-image;": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact,css",
    "prefix": "bilg",
    "body": [
      "background-image: linear-gradient(",
      "  -10deg,",
      "  ${({ theme }) => theme.palette.primary.main},",
      "  ${({ theme }) => theme.palette.primary.light}",
      ");"
    ],
    "description": "background-image"
  }
}
